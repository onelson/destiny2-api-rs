/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyRequestsActionsDestinyItemStateRequest {
  #[serde(rename = "state")]
  state: Option<bool>,
  #[serde(rename = "itemId")]
  item_id: Option<i64>,
  #[serde(rename = "characterId")]
  character_id: Option<i64>,
  #[serde(rename = "membershipType")]
  membership_type: Option<::models::BungieMembershipType>
}

impl DestinyRequestsActionsDestinyItemStateRequest {
  pub fn new() -> DestinyRequestsActionsDestinyItemStateRequest {
    DestinyRequestsActionsDestinyItemStateRequest {
      state: None,
      item_id: None,
      character_id: None,
      membership_type: None
    }
  }

  pub fn set_state(&mut self, state: bool) {
    self.state = Some(state);
  }

  pub fn with_state(mut self, state: bool) -> DestinyRequestsActionsDestinyItemStateRequest {
    self.state = Some(state);
    self
  }

  pub fn state(&self) -> Option<&bool> {
    self.state.as_ref()
  }

  pub fn reset_state(&mut self) {
    self.state = None;
  }

  pub fn set_item_id(&mut self, item_id: i64) {
    self.item_id = Some(item_id);
  }

  pub fn with_item_id(mut self, item_id: i64) -> DestinyRequestsActionsDestinyItemStateRequest {
    self.item_id = Some(item_id);
    self
  }

  pub fn item_id(&self) -> Option<&i64> {
    self.item_id.as_ref()
  }

  pub fn reset_item_id(&mut self) {
    self.item_id = None;
  }

  pub fn set_character_id(&mut self, character_id: i64) {
    self.character_id = Some(character_id);
  }

  pub fn with_character_id(mut self, character_id: i64) -> DestinyRequestsActionsDestinyItemStateRequest {
    self.character_id = Some(character_id);
    self
  }

  pub fn character_id(&self) -> Option<&i64> {
    self.character_id.as_ref()
  }

  pub fn reset_character_id(&mut self) {
    self.character_id = None;
  }

  pub fn set_membership_type(&mut self, membership_type: ::models::BungieMembershipType) {
    self.membership_type = Some(membership_type);
  }

  pub fn with_membership_type(mut self, membership_type: ::models::BungieMembershipType) -> DestinyRequestsActionsDestinyItemStateRequest {
    self.membership_type = Some(membership_type);
    self
  }

  pub fn membership_type(&self) -> Option<&::models::BungieMembershipType> {
    self.membership_type.as_ref()
  }

  pub fn reset_membership_type(&mut self) {
    self.membership_type = None;
  }

}



