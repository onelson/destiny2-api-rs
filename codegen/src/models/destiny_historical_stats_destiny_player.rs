/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyHistoricalStatsDestinyPlayer {
  /// Details about the player as they are known in game (platform display name, Destiny emblem)
  #[serde(rename = "destinyUserInfo")]
  destiny_user_info: Option<Object>,
  /// Class of the character if applicable and available.
  #[serde(rename = "characterClass")]
  character_class: Option<String>,
  /// Level of the character if available. Zero if it is not available.
  #[serde(rename = "characterLevel")]
  character_level: Option<i32>,
  /// Light Level of the character if available. Zero if it is not available.
  #[serde(rename = "lightLevel")]
  light_level: Option<i32>,
  /// Details about the player as they are known on BungieNet. This will be undefined if the player has marked their credential private, or does not have a BungieNet account.
  #[serde(rename = "bungieNetUserInfo")]
  bungie_net_user_info: Option<Object>,
  /// Current clan name for the player. This value may be null or an empty string if the user does not have a clan.
  #[serde(rename = "clanName")]
  clan_name: Option<String>,
  /// Current clan tag for the player. This value may be null or an empty string if the user does not have a clan.
  #[serde(rename = "clanTag")]
  clan_tag: Option<String>
}

impl DestinyHistoricalStatsDestinyPlayer {
  pub fn new() -> DestinyHistoricalStatsDestinyPlayer {
    DestinyHistoricalStatsDestinyPlayer {
      destiny_user_info: None,
      character_class: None,
      character_level: None,
      light_level: None,
      bungie_net_user_info: None,
      clan_name: None,
      clan_tag: None
    }
  }

  pub fn set_destiny_user_info(&mut self, destiny_user_info: Object) {
    self.destiny_user_info = Some(destiny_user_info);
  }

  pub fn with_destiny_user_info(mut self, destiny_user_info: Object) -> DestinyHistoricalStatsDestinyPlayer {
    self.destiny_user_info = Some(destiny_user_info);
    self
  }

  pub fn destiny_user_info(&self) -> Option<&Object> {
    self.destiny_user_info.as_ref()
  }

  pub fn reset_destiny_user_info(&mut self) {
    self.destiny_user_info = None;
  }

  pub fn set_character_class(&mut self, character_class: String) {
    self.character_class = Some(character_class);
  }

  pub fn with_character_class(mut self, character_class: String) -> DestinyHistoricalStatsDestinyPlayer {
    self.character_class = Some(character_class);
    self
  }

  pub fn character_class(&self) -> Option<&String> {
    self.character_class.as_ref()
  }

  pub fn reset_character_class(&mut self) {
    self.character_class = None;
  }

  pub fn set_character_level(&mut self, character_level: i32) {
    self.character_level = Some(character_level);
  }

  pub fn with_character_level(mut self, character_level: i32) -> DestinyHistoricalStatsDestinyPlayer {
    self.character_level = Some(character_level);
    self
  }

  pub fn character_level(&self) -> Option<&i32> {
    self.character_level.as_ref()
  }

  pub fn reset_character_level(&mut self) {
    self.character_level = None;
  }

  pub fn set_light_level(&mut self, light_level: i32) {
    self.light_level = Some(light_level);
  }

  pub fn with_light_level(mut self, light_level: i32) -> DestinyHistoricalStatsDestinyPlayer {
    self.light_level = Some(light_level);
    self
  }

  pub fn light_level(&self) -> Option<&i32> {
    self.light_level.as_ref()
  }

  pub fn reset_light_level(&mut self) {
    self.light_level = None;
  }

  pub fn set_bungie_net_user_info(&mut self, bungie_net_user_info: Object) {
    self.bungie_net_user_info = Some(bungie_net_user_info);
  }

  pub fn with_bungie_net_user_info(mut self, bungie_net_user_info: Object) -> DestinyHistoricalStatsDestinyPlayer {
    self.bungie_net_user_info = Some(bungie_net_user_info);
    self
  }

  pub fn bungie_net_user_info(&self) -> Option<&Object> {
    self.bungie_net_user_info.as_ref()
  }

  pub fn reset_bungie_net_user_info(&mut self) {
    self.bungie_net_user_info = None;
  }

  pub fn set_clan_name(&mut self, clan_name: String) {
    self.clan_name = Some(clan_name);
  }

  pub fn with_clan_name(mut self, clan_name: String) -> DestinyHistoricalStatsDestinyPlayer {
    self.clan_name = Some(clan_name);
    self
  }

  pub fn clan_name(&self) -> Option<&String> {
    self.clan_name.as_ref()
  }

  pub fn reset_clan_name(&mut self) {
    self.clan_name = None;
  }

  pub fn set_clan_tag(&mut self, clan_tag: String) {
    self.clan_tag = Some(clan_tag);
  }

  pub fn with_clan_tag(mut self, clan_tag: String) -> DestinyHistoricalStatsDestinyPlayer {
    self.clan_tag = Some(clan_tag);
    self
  }

  pub fn clan_tag(&self) -> Option<&String> {
    self.clan_tag.as_ref()
  }

  pub fn reset_clan_tag(&mut self) {
    self.clan_tag = None;
  }

}



