/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// DestinyChallengesDestinyChallengeStatus : Represents the status and other related information for a challenge that is - or was - available to a player.   A challenge is a bonus objective, generally tacked onto Quests or Activities, that provide additional variations on play.

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyChallengesDestinyChallengeStatus {
  /// The progress - including completion status - of the active challenge.
  #[serde(rename = "objective")]
  objective: Option<Object>
}

impl DestinyChallengesDestinyChallengeStatus {
  /// Represents the status and other related information for a challenge that is - or was - available to a player.   A challenge is a bonus objective, generally tacked onto Quests or Activities, that provide additional variations on play.
  pub fn new() -> DestinyChallengesDestinyChallengeStatus {
    DestinyChallengesDestinyChallengeStatus {
      objective: None
    }
  }

  pub fn set_objective(&mut self, objective: Object) {
    self.objective = Some(objective);
  }

  pub fn with_objective(mut self, objective: Object) -> DestinyChallengesDestinyChallengeStatus {
    self.objective = Some(objective);
    self
  }

  pub fn objective(&self) -> Option<&Object> {
    self.objective.as_ref()
  }

  pub fn reset_objective(&mut self) {
    self.objective = None;
  }

}



