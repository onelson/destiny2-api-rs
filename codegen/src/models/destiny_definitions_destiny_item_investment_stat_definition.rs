/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// DestinyDefinitionsDestinyItemInvestmentStatDefinition : Represents a \"raw\" investment stat, before calculated stats are calculated and before any DestinyStatGroupDefinition is applied to transform the stat into something closer to what you see in-game.  Because these won't match what you see in-game, consider carefully whether you really want to use these stats. I have left them in case someone can do something useful or interesting with the pre-processed statistics.

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyDefinitionsDestinyItemInvestmentStatDefinition {
  /// The hash identifier for the DestinyStatDefinition defining this stat.
  #[serde(rename = "statTypeHash")]
  stat_type_hash: Option<i32>,
  /// The raw \"Investment\" value for the stat, before transformations are performed to turn this raw stat into stats that are displayed in the game UI.
  #[serde(rename = "value")]
  value: Option<i32>
}

impl DestinyDefinitionsDestinyItemInvestmentStatDefinition {
  /// Represents a \"raw\" investment stat, before calculated stats are calculated and before any DestinyStatGroupDefinition is applied to transform the stat into something closer to what you see in-game.  Because these won't match what you see in-game, consider carefully whether you really want to use these stats. I have left them in case someone can do something useful or interesting with the pre-processed statistics.
  pub fn new() -> DestinyDefinitionsDestinyItemInvestmentStatDefinition {
    DestinyDefinitionsDestinyItemInvestmentStatDefinition {
      stat_type_hash: None,
      value: None
    }
  }

  pub fn set_stat_type_hash(&mut self, stat_type_hash: i32) {
    self.stat_type_hash = Some(stat_type_hash);
  }

  pub fn with_stat_type_hash(mut self, stat_type_hash: i32) -> DestinyDefinitionsDestinyItemInvestmentStatDefinition {
    self.stat_type_hash = Some(stat_type_hash);
    self
  }

  pub fn stat_type_hash(&self) -> Option<&i32> {
    self.stat_type_hash.as_ref()
  }

  pub fn reset_stat_type_hash(&mut self) {
    self.stat_type_hash = None;
  }

  pub fn set_value(&mut self, value: i32) {
    self.value = Some(value);
  }

  pub fn with_value(mut self, value: i32) -> DestinyDefinitionsDestinyItemInvestmentStatDefinition {
    self.value = Some(value);
    self
  }

  pub fn value(&self) -> Option<&i32> {
    self.value.as_ref()
  }

  pub fn reset_value(&mut self) {
    self.value = None;
  }

}



