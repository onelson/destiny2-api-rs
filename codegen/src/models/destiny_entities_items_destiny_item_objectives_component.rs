/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// DestinyEntitiesItemsDestinyItemObjectivesComponent : Items can have objectives and progression. When you request this block, you will obtain information about any Objectives and progression tied to this item.

#[derive(Debug, Serialize, Deserialize)]
pub struct DestinyEntitiesItemsDestinyItemObjectivesComponent {
  /// If the item has a hard association with objectives, your progress on them will be defined here.   Objectives are our standard way to describe a series of tasks that have to be completed for a reward.
  #[serde(rename = "objectives")]
  objectives: Option<Vec<::models::DestinyQuestsDestinyObjectiveProgress>>
}

impl DestinyEntitiesItemsDestinyItemObjectivesComponent {
  /// Items can have objectives and progression. When you request this block, you will obtain information about any Objectives and progression tied to this item.
  pub fn new() -> DestinyEntitiesItemsDestinyItemObjectivesComponent {
    DestinyEntitiesItemsDestinyItemObjectivesComponent {
      objectives: None
    }
  }

  pub fn set_objectives(&mut self, objectives: Vec<::models::DestinyQuestsDestinyObjectiveProgress>) {
    self.objectives = Some(objectives);
  }

  pub fn with_objectives(mut self, objectives: Vec<::models::DestinyQuestsDestinyObjectiveProgress>) -> DestinyEntitiesItemsDestinyItemObjectivesComponent {
    self.objectives = Some(objectives);
    self
  }

  pub fn objectives(&self) -> Option<&Vec<::models::DestinyQuestsDestinyObjectiveProgress>> {
    self.objectives.as_ref()
  }

  pub fn reset_objectives(&mut self) {
    self.objectives = None;
  }

}



